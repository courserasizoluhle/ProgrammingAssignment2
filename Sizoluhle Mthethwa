## The aim is to write a pair of functions, namely, "makeCacheMatrix" and "cacheSolve" to cache the inverse of a matrix

makeCacheMatrix <- function(x = matrix())  ## makeCacheMatrix is a function which creates a special "matrix" object that can
{
  inv <- NULL
  set <- function(y) 
  {
    x <<- y
    inv <<- NULL
  }
  get <- function() x
  setinv <- function(inverse) inv <<- inverse
  getinv <- function() inv
  list(set = set, get = get, setinv = setinv, getinv = getinv)
}

cacheSolve <- function(x, ...)  ## cacheSolve is a function which computes the inverse of the special "matrix" 
{
  inv <- x$getinv()             ## Return a matrix that is the inverse of 'x'
  if(!is.null(inv)) 
  {
    message("getting cached result")
    return(inv)
  }
data <- x$get()
  inv <- solve(data, ...)
  x$setinv(inv)
  inv
}
